name: CI/CD Pipeline with SonarCloud Analysis

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch: # Allows manual triggering

env:
  DOTNET_VERSION: '8.0.x'
  SONAR_PROJECT_KEY: 'pranavpandey86_AgenticMCP'
  SONAR_ORGANIZATION: 'pranavpandey86'

jobs:
  build-and-test:
    name: Build, Test & Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
      # Checkout code
      - name: 🛒 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better SonarCloud analysis
      
      # Setup Java for SonarCloud
      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      
      # Setup .NET
      - name: 🔧 Setup .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      # Cache dependencies
      - name: 💾 Cache .NET dependencies
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      
      # Cache SonarCloud packages
      - name: 💾 Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      # Cache SonarCloud scanner
      - name: 💾 Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      
      # Install SonarCloud scanner
      - name: 🔧 Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
      
      # Restore dependencies
      - name: 📦 Restore dependencies
        run: |
          cd src/AgenticOrderingSystem.API
          dotnet restore AgenticOrderingSystem.API.csproj
      
      # Security scan
      - name: 🔒 Security vulnerability scan
        run: |
          cd src/AgenticOrderingSystem.API
          dotnet list package --vulnerable --include-transitive 2>&1 | tee security-scan.txt
          if grep -q "has the following vulnerable packages" security-scan.txt; then
            echo "❌ Security vulnerabilities found!"
            cat security-scan.txt
            exit 1
          else
            echo "✅ No security vulnerabilities found"
          fi
      
      # Build, test and analyze with SonarCloud
      - name: 🏗️ Build, Test & Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd src/AgenticOrderingSystem.API
          
          # Start SonarCloud analysis
          ./.sonar/scanner/dotnet-sonarscanner begin \
            /k:"${{ env.SONAR_PROJECT_KEY }}" \
            /o:"${{ env.SONAR_ORGANIZATION }}" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.exclusions="**/bin/**,**/obj/**,Tests/**,**/Tests/**"
          
          # Build project
          echo "🏗️ Building project..."
          dotnet build AgenticOrderingSystem.API.csproj --no-restore --configuration Release
          
          # Note: No tests available yet - this will be added in future iterations
          echo "ℹ️ Test execution skipped - Test project will be added in future iterations"
          
          # End SonarCloud analysis
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      
      # Comment PR with results
      - name: 💬 Comment PR with build results  
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const comment = `## 🏗️ Build Results
      
            ✅ Build completed successfully!
            
            📊 **SonarCloud Analysis**: [View Results](https://sonarcloud.io/project/overview?id=${{ env.SONAR_PROJECT_KEY }})
            
            � **Security Scan**: Passed - No vulnerabilities detected
            
            ℹ️ **Test Coverage**: Test project will be added in future iterations
            
            *This comment was automatically generated by the CI/CD pipeline.*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
